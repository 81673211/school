<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xmlns:context="http://www.springframework.org/schema/context"
			 xmlns:p="http://www.springframework.org/schema/p"
			 xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd"
			 default-lazy-init="true">

	<description>各环境数据源配置</description>

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.maxTotal}"/>
		<property name="maxIdle" value="${redis.maxIdle}"/>
		<property name="minIdle" value="${redis.minIdle}"/>
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>
		<property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}"/>
		<property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}"/>
		<property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}"/>
		<property name="testOnBorrow" value="true"/>
		<property name="testOnReturn" value="true"/>
		<property name="testWhileIdle" value="true"/>
		<!-- 连接耗尽时是否阻塞，false报异常，true阻塞超时,默认true -->
		<property name="blockWhenExhausted" value="false"/>
	</bean>

	<bean id="jedisConnectionFactory"
				class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
				destroy-method="destroy">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="timeout" value="${redis.timeout}" />
		<property name="database" value="${redis.database}" />
		<property name="password" value="${redis.password}" />
		<property name="usePool" value="true" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
				p:connection-factory-ref="jedisConnectionFactory">
		<!-- 序列化方式 建议key/hashKey采用StringRedisSerializer。 -->
		<property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashKeySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashValueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
	</bean>

	<!-- development 环境 -->
 	<beans profile="development">
 		<context:property-placeholder ignore-unresolvable="true" location="classpath*:dev/redis.properties" />
 	</beans>
 	
 	<!-- test环境 -->
	<beans profile="test">
		<context:property-placeholder ignore-unresolvable="true" location="classpath*:test/redis.properties" />
	</beans>
	
	<!-- production环境 -->
	<beans profile="production">
		<context:property-placeholder ignore-unresolvable="true" location="classpath*:pro/redis.properties" />
	</beans>
	
	
</beans>